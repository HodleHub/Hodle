"""root of all queries"""
type Query {
  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node

  """Fetches objects given their IDs"""
  nodes(
    """The IDs of objects"""
    ids: [ID!]!
  ): [Node]!

  """user logged"""
  me: User
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

"""Represents an authenticating user"""
type User implements Node {
  """The ID of an object"""
  id: ID!
  username: String!
  email: String!
  password: String!
}

"""Root of mutations"""
type Mutation {
  UserLogin(input: UserLoginMutationInput!): UserLoginMutationPayload

  """Register a new user"""
  UserRegister(input: UserRegisterInput!): UserRegisterPayload
}

type UserLoginMutationPayload {
  """Default error field resolver."""
  error: String

  """Default success field resolver."""
  success: String
  me: User
  clientMutationId: String
}

input UserLoginMutationInput {
  email: String!
  password: String!
  clientMutationId: String
}

type UserRegisterPayload {
  """Default error field resolver."""
  error: String

  """Default success field resolver."""
  success: String
  clientMutationId: String
}

input UserRegisterInput {
  username: String!
  email: String!
  password: String!
  clientMutationId: String
}